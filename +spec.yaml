openapi: 3.0.3
info:
    title: NTNU CSIE Camp API Documentation
    description: |-
        NTNU CSIE Camp API documentation

        Some useful links:
        - [Backend repository](https://github.com/CSIE-Camp/website-backend)
        - [Camp website](https://camp.csie.cool)

    version: 1.0.2
servers:
    - url: https://server.com
        description: SwaggerHub API Auto Mocking
tags:
    - name: Signup
    - name: Login
    - name: Profile
paths:
    /signp/email:
        post:
            tags:
                - Signup
            summary: First step of account creation
            description: The user should submit their email
            requestBody:
                description: Submits the user inputted email
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/signup_email"
            responses:
                200: 
                    description: Successfully send verification email. Ask the user to verify their email
                400:
                    description: Password was null or empty
                403:
                    description: Email is in use
                500:
                    description: Unexpected errors
    /signp/password:
        post:
            tags:
                - Signup
            summary: Final step of account creation
            description: The user should submit their password. Passwords should be validated on the front end.
            security:
                - bearerAuth: []
            requestBody:
                description: The submitted data should be in a SHA512 hash.Passwords should be validated on the front end. 
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/signup_password"
            responses:
                200: 
                    description: Successfully created the account. Ask the user to login
                400:
                    description: Password was null or empty
                418:
                    description: Provided password was not a hex digest of a SHA512 hash
                500:
                    description: Unexpected errors

    /login:
        post:
            tags:
                - Login
            summary: Login
            description: Logs in the user
            requestBody:
                description: The user should submit their email and password. Password should be the hex digest of a SHA512 hash of the inputted password
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/login"
            responses:
                200:
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/login_response_success"
                400:
                    description: Invalid data
                403:
                    description: Account does not exist
                418:
                    description: Password was not a SHA512 hash
                500:
                    description: Unexpected error
                    
        delete:
            tags:
                - Login
            summary: Log out
            description: Logs out the user
            requestBody:
                description: Put the access token in the Authorization header. Please be reminded to delete the access token and refresh token from the browser's storage
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/logout"


components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: Bearer
            bearerFormat: JWT
    schemas:
        signup_email:
            type: object
            properties:
                email:
                    type: string
                    example: test@example.com
        signup_password:
            type: object
            properties:
                password:
                    type: string
                    example: bed4efa1d4fdbd954bd3705d6a2a78270ec9a52ecfbfb010c61862af5c76af1761ffeb1aef6aca1bf5d02b3781aa854fabd2b69c790de74e17ecfec3cb6ac4bf

        login:
            type: object
            properties:
                email:
                    type: string
                    example: test@example.com
                password:
                    type: string
                    example: bed4efa1d4fdbd954bd3705d6a2a78270ec9a52ecfbfb010c61862af5c76af1761ffeb1aef6aca1bf5d02b3781aa854fabd2b69c790de74e17ecfec3cb6ac4bf
        
        login_response_success:
            type: object
            properties:
                access_token:
                    type: string
                refresh_token:
                    type: string
                token_type:
                    type: string
                    example: token

        logout:
            type: object
            properties:
                refresh_token:
                    type: string
                    example: Refresh token
