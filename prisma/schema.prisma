datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model CampStatus {
  id                       Int     @id @default(1)
  Apply_Deadline_TimeStamp String?
  Allow_Registration       Boolean @default(false)
  Allow_Status_Lookup      Boolean @default(false)
  LastEditedBy             String?
}

model Accounts {
  id             String            @id @default(cuid())
  CreatedAt      DateTime          @default(now())
  Email          String            @unique
  Password       String
  PassedTest     Boolean           @default(false)
  Applied        Boolean           @default(false)
  Status         ApplicationStatus @default(NOT_STARTED)
  Role           Roles             @default(PARTICIPANT)
  Points          Int               @default(0)
  Profile        Profiles[]
  RefreshTokens  RefreshTokens[]
  PaymentDetails PaymentDetails[]
}

model RefreshTokens {
  id        String    @id @unique
  Token     String
  CreatedAt String
  Accounts  Accounts? @relation(fields: [AccountId], references: [id])
  AccountId String?
}

//Accounts and Profile should have a 1-1 relationship
model Profiles {
  id                            Int       @id @default(autoincrement())
  Name                          String?
  Gender                        String?
  School                        String?
  BirthDate                     String?
  ID_Document                   String?
  ID_Validated                  Boolean   @default(false)
  PhoneNumber                   String?
  FoodType                      String?
  AllergySource                 String?
  Diseases                      String?
  ClothesSize                   String?
  SelfIntro                     String?
  Motivation                    String?
  PicturePath                   String?
  ConsentFormPath               String?
  Lang_Learned                  String?
  Lang_Mastered                 String?
  Emergency_ContactName         String?
  Emergency_ContactNumber       String?
  Emergency_ContactRelationship String?
  Emergency_BloodType           String?
  Facebook                      String?
  Github                        String?
  Discord                       String?
  AccountId                     String    @unique
  Accounts                      Accounts? @relation(fields: [AccountId], references: [id])
}

model PaymentDetails {
  id                  Int           @id @default(autoincrement())
  TransferDate        DateTime?
  AccountName         String?
  Account_Last5Digits String?
  PaymentConfirmed    PaymentStatus @default(UNPAID)
  LastEditedBy        String?
  Account             Accounts?     @relation(fields: [AccountId], references: [id])
  AccountId           String?       @unique
}

model Logs {
  id          Int      @id @default(autoincrement())
  AccountId   String
  AccountType String
  Details     String
  TimeStamp   DateTime @default(now())
}

enum PaymentStatus {
  PAID
  REFUNDED
  UNPAID
}

enum Roles {
  DEVELOPER
  ADMIN
  STAFF
  PARTICIPANT
}

enum ApplicationStatus {
  STAFF
  ACCEPTED
  WAITLIST_ACCEPTED
  WAITLIST
  REJECTED
  GAVE_UP
  NOT_STARTED
}
